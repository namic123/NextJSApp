"use client";
import './globals.css'
import Link from "next/link";
import {useEffect, useState} from "react";

// export const metadata = {
//   title: 'Web tutorials',
//   description: 'Generated by jaysung',
// }

export default function RootLayout({ children }) {
  const [topics, setTopics] = useState([]);
  useEffect(() => {
    /* 에러. nextjs는 기본적으로 컴포넌트를 Server 컴포넌트로 간주 */
    fetch('http://localhost:9999/topics').then(resp => resp.json())
      .then(result =>{
        setTopics(result);
      })
  }, []);
  return (
    <html>
    {/* children이라는 property는 page.js라는 파일의 값을 가져옴 */}
    {/* 공통된 내용은 layout 파일에서 작성한다.*/}
      <body>
      <h1>
        {/* Link 사용 이유 */}
        {/* 1. 빠른 페이지 로딩: 새 페이지를 전체 불러오는 대신 필요한 부분만 업데이트 */}
        {/* 2. 상태 유지:  애플리케이션의 상태(예:로그인)가 페이지 이동시에도 유지 */}
        {/* 3. 서버 부하 감소: 서버에 새 페이지를 요청하는 대신, 클라이언트 측에서 처리하므로 서버 부하가 감소 */}
        {/* 4. 사용자 경험 개선: 사용자는 페이지가 빠르게 로드되고, 데이터와 상태가 유지되므로 더 나은 사용자 경험을 체감 */}
        {/* 5. Prefetching: Next js의 Link 컴포넌트는 사용자가 링크에 마우스를 올리는 순간 미리 데이터를 가져오는 prefetching 기능을 제공. 로딩시간 감소 */}
        <Link href="/">WEB</Link>
      </h1>
      <ol>
        {topics.map((topic) => {
          return <li key={topic.id}><Link href={`/read/${topic.id}`}>{topic.title}</Link></li>
        })}
      </ol>
      {children}
      <ul>
        <li>
          {/* create라는 폴더 안에 있는 page.js 파일에 라우팅됨. */}
          <Link href="/create">Create</Link>
        </li>
        <li>
          <Link href="/update/1">Update</Link>
        </li>
        <li>
          <input type="button" value="delete"/>
        </li>
      </ul>
      </body>
    </html>
  )
}
